%% Preprocessing script for Cluster Based Permutation Testing script
% Designed for data preprocessed with CBPT_Preproc_MJones script
% takes in the file created by preproc script
% Conducts nPermutation number of t-tests to generate a null distribution
% REQUIREMENTS
    % TrialData file generated by preproc script

% Mallory Jones 2025

%% Set Parameters %%

dir = "C:\Users\mallo\OneDrive\Desktop\ClusterBasedPermutationTesting\Preproc";
dirOut = "C:\Users\mallo\OneDrive\Desktop\ClusterBasedPermutationTesting\Data\InputData\";
data = readtable ("C:\Users\mallo\OneDrive\Desktop\ClusterBasedPermutationTesting\Data\InputData\" + ...
    "PreprocData\TrialData");
nPermutations = 20; %number of permutations; can be adjusted; 1000 generally accepted minimum
nChannels = 3; %number of channels; can be adjusted; depends on which channels were identified in preproc document
timePoints = 800; %total number of timepoints being investigated; can be adjusted based on length of ERP extracted from BrainVision
channels = data.Channel;
uniqueChannels = string(unique(channels));
varofInterest = 'Ruminator';

        
%% Create Null Distribution %%

dataPerm = data;
null_cluster_size = [];
for perm = 1:nPermutations
    dataPerm.(varofInterest) = randi([1,2], height(dataPerm), 1);
    resultsStruct = perform_tTests(dataPerm, uniqueChannels, varofInterest);

    sig_maskPerm = zeros(nChannels, timePoints); % create significance mask
    
    % loop through significance values in each channel
    for c = 1:nChannels
        for t = 1:timePoints;
            row = (c - 1) * timePoints + t;
            sig_maskPerm(c, t) = resultsStruct(row).PVal < 0.01;
        end
    end
    
    % find clusters - calls function we defined above
    clusters = find_clusters(sig_maskPerm);

    if isempty(clusters)
        max_cluster_size = 0;
    else
        max_cluster_size = max(clusters);
    end
    null_cluster_size = [null_cluster_size, max_cluster_size];
end

  

%% Extract value for the 95th percentile of data in the null distribution %%

min_cluster_size = prctile(null_cluster_size, 95)